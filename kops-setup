Installing Kubernetes on AWS using Kops : 

1. Launched Linux EC2 instance in AWS.

2. Create a Role for permissions such as S3, EC2, VPC, Route 53 etc and then attach it to the running EC2 instance

3. Install Kops on EC2
curl -LO https://github.com/kubernetes/kops/releases/download/$(curl -s https://api.github.com/repos/kubernetes/kops/releases/latest | grep tag_name | cut -d '"' -f 4)/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops

4. Install kubectl
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl

5. Create S3 bucket in AWS (S3 bucket is used by kubernetes to persist cluster state)

6. Create a private hosted zone in AWS Route53 and Select default vpc in the region you are setting up your cluster

7 Configure environment variables.

Open .bashrc file
vi ~/.bashrc

export KOPS_CLUSTER_NAME= Give Privatehosted zone name
export KOPS_STATE_STORE=s3://give s3 bucket name

Then running command to reflect variables added to .bashrc
	source ~/.bashrc
  
8. Create ssh key pair - ssh-keygen

9. Create a Kubernetes cluster definition.
kops create cluster \
--state=${KOPS_STATE_STORE} \
--node-count=2 \
--master-size=t2.micro \
--node-size=t2.micro \
--zones=us-east-2a,us-east-2b \
--name=${KOPS_CLUSTER_NAME} \
--dns private \
--master-count 1

10. Create kubernetes cluster
kops update cluster --yes
Execute the validate command to check its status and wait until the cluster becomes ready.
kops validate cluster

11. To connect to the master
ssh admin@api.pavani.in

